name: CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Black check
        run: poetry run black --check .

      - name: isort check
        run: poetry run isort --check .

      - name: Flake8 check
        run: poetry run flake8 . --ignore=E501

      - name: Docstring style (pydocstyle)
        run: poetry run pydocstyle src/helloworld tests

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: MyPy
        run: poetry run mypy src/helloworld tests

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Pytest
        run: poetry run pytest

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Bandit
        run: poetry run bandit -r src/helloworld -c bandit.yml

  docs:
    name: Docs build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - run: pip install poetry
      - run: poetry install
      - name: Build Documentation
        run: poetry run mkdocs build --strict --config-file ./docs/mkdocs.yml

  deploy-docs:
    name: Deploy Docs
    needs: docs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Setup Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Poetry & dependencies
        run: |
          pip install poetry
          poetry install

      - name: Configure Git for deploy
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # rewrite origin to include the token for HTTPS auth
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Deploy to GitHub Pages
        run: |
          poetry run mkdocs gh-deploy \
            --force \
            --config-file docs/mkdocs.yml

  release:
    name: Bump Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Run Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: poetry run semantic-release publish