{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"api/helloworld/","title":"HelloWorld API","text":"<p>A simple HelloWorld class that can return greetings.</p> Source code in <code>src/helloworld/hello.py</code> <pre><code>class HelloWorld:\n    \"\"\"A simple HelloWorld class that can return greetings.\"\"\"\n\n    def __init__(self) -&gt; None:\n        \"\"\"Initialize a new HelloWorld instance.\"\"\"\n        pass\n\n    def greet(self, name: str = \"nobody\") -&gt; str:\n        \"\"\"\n        Generate a personalized greeting.\n\n        Args:\n            name (str): The name of the person to greet. Defaults to 'nobody'.\n\n        Returns\n        -------\n        str: A greeting string, e.g., 'Hello Alice'.\n        \"\"\"\n        self.name = name\n        return f\"Hello {self.name}\"\n\n    def hello(self) -&gt; str:\n        \"\"\"\n        Return the classic \"Hello, world!\" message.\n\n        Returns\n        -------\n            str: The string \"Hello, world!!\".\n        \"\"\"\n        return \"Hello, world!!\"\n</code></pre>"},{"location":"api/helloworld/#helloworld.hello.HelloWorld.__init__","title":"<code>__init__()</code>","text":"<p>Initialize a new HelloWorld instance.</p> Source code in <code>src/helloworld/hello.py</code> <pre><code>def __init__(self) -&gt; None:\n    \"\"\"Initialize a new HelloWorld instance.\"\"\"\n    pass\n</code></pre>"},{"location":"api/helloworld/#helloworld.hello.HelloWorld.greet","title":"<code>greet(name='nobody')</code>","text":"<p>Generate a personalized greeting.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the person to greet. Defaults to 'nobody'.</p> <code>'nobody'</code>"},{"location":"api/helloworld/#helloworld.hello.HelloWorld.greet--returns","title":"Returns","text":"<p>str: A greeting string, e.g., 'Hello Alice'.</p> Source code in <code>src/helloworld/hello.py</code> <pre><code>def greet(self, name: str = \"nobody\") -&gt; str:\n    \"\"\"\n    Generate a personalized greeting.\n\n    Args:\n        name (str): The name of the person to greet. Defaults to 'nobody'.\n\n    Returns\n    -------\n    str: A greeting string, e.g., 'Hello Alice'.\n    \"\"\"\n    self.name = name\n    return f\"Hello {self.name}\"\n</code></pre>"},{"location":"api/helloworld/#helloworld.hello.HelloWorld.hello","title":"<code>hello()</code>","text":"<p>Return the classic \"Hello, world!\" message.</p>"},{"location":"api/helloworld/#helloworld.hello.HelloWorld.hello--returns","title":"Returns","text":"<pre><code>str: The string \"Hello, world!!\".\n</code></pre> Source code in <code>src/helloworld/hello.py</code> <pre><code>def hello(self) -&gt; str:\n    \"\"\"\n    Return the classic \"Hello, world!\" message.\n\n    Returns\n    -------\n        str: The string \"Hello, world!!\".\n    \"\"\"\n    return \"Hello, world!!\"\n</code></pre>"}]}