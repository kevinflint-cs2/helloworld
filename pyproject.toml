[project]
name = "helloworld"
version = "0.1.5"
description = "The most complex helloworld in the world!"
authors = [
    {name = "Flint, Kevin",email = "kevin.flint@cybersecuritysquared.com"}
]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
]

[tool.poetry]
packages = [{include = "helloworld", from = "src"}]

[tool.black]
line-length = 88
target-version = ["py312"]    # adjust to your minimum supported Python

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 95
extend-ignore = ["E203", "W503"]

[tool.pytest.ini_options]
addopts = "-v --showlocals --disable-warnings"

[tool.mypy]
# paths to check; adjust if your code lives elsewhere
files = ["src/helloworld", "tests"]
ignore_missing_imports = true
python_version = "3.13"
strict = true   # flip to true once youâ€™ve cleaned up your code

[tool.pydocstyle]
# which conventions to check, e.g. google, numpy, pep257
convention = "numpy"
# codes to ignore
add-ignore = ["D100", "D104"]

[tool.semantic_release]
version_source = "tag"
version_variable = "helloworld/__init__.py:__version__"
commit_version_number = true
upload_to_pypi = false
build_command = "poetry build"
changelog_file = "CHANGELOG.md"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.3.0"
pre-commit = "^4.2.0"
invoke = "^2.2.0"
python-dotenv = "^1.1.1"
mypy = "^1.17.0"
pydocstyle = "^6.3.0"
bandit = "^1.8.6"
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.15"
mkdocstrings = {extras = ["python"], version = "^0.29.1"}
python-semantic-release = "^10.2.0"
commitizen = "^4.8.3"


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"